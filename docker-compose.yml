version: '3.8'

services:
  soc-platform:
    build: .
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - GOOGLE_APPLICATION_CREDENTIALS=/app/threatexplainer-1185aa9fcd44.json
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - REDIS_URL=redis://host.docker.internal:6379
      - POSTGRES_URL=postgresql://soc_user:soc_password@postgres:5432/soc_platform
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=soc_neo4j_password
    depends_on:
      - postgres
      - neo4j
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped

# Using existing local Redis instance

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=soc_platform
      - POSTGRES_USER=soc_user
      - POSTGRES_PASSWORD=soc_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped

  neo4j:
    image: neo4j:5.15-community
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/soc_neo4j_password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:v1.7.0
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  qdrant_data: